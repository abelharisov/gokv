package main

import (
	"log"
	"os"
	"text/template"
)

var implementations = []string{
	"redis",
	"mongodb",
}

func main() {
	t := template.Must(template.New("template").Parse(tmpl))
	err := t.Execute(os.Stdout, implementations)
	if err != nil {
		log.Fatal(err)
	}
}

var tmpl = `// Code generated by go generate; DO NOT EDIT.
package main

import (
	"errors"
	"fmt"
	
	"github.com/mitchellh/mapstructure"
	
	"github.com/philippgille/gokv"
	"github.com/philippgille/gokv/encoding"
{{range $implementation := .}}	"github.com/philippgille/gokv/{{$implementation}}"
{{end}}
)

func createStore(implementation string, codec encoding.Codec, config interface{}) (store gokv.Store, err error) {
	switch implementation {
{{range $implementation := .}}
	case "{{$implementation}}":
		options := {{$implementation}}.DefaultOptions
		options.Codec = codec
		if err := mapstructure.Decode(config, &options); err != nil {
			return nil, err
		}
		return {{$implementation}}.NewClient(options){{end}}
	}

	return nil, errors.New(fmt.Sprint("unsupported implementation: ", implementation))
}
`
